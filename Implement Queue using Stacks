class MyQueue {
    Stack<Integer> st1=new Stack<>();
    Stack<Integer> st2=new Stack<>();
    public MyQueue() {
        
    }
    
    public void push(int x) {
        st1.push(x);
    }
    
    public int pop() {
        int ans=-1;
        if(st1.size()==0) return -1;
        else if(st1.size()==1) return st1.pop();
        else{
            while(st1.size()!=1){
                st2.push(st1.pop());
            }
            ans=st1.pop();
            while(st2.size()!=0){
                st1.push(st2.pop());
            }
        }
        return ans;
    }
    
    public int peek() {
        int ans=-1;
        if(st1.size()==0) return -1;
        else if(st1.size()==1) return st1.peek();
        else{
            while(st1.size()!=1){
                st2.push(st1.pop());
            }
            ans=st1.peek();
            while(st2.size()!=0){
                st1.push(st2.pop());
            }
        }
        return ans;
    }
    
    public boolean empty() {
        if(st1.size()==0) return true;
        return false;
    }
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.empty();
 */
