class Solution {
    public void check(int idx,int target,List<List<Integer>> ans,List<Integer> curr,int[] c){
        if(idx>=c.length) return;
        if(target==0){
            ans.add(new ArrayList<Integer>(curr));
            return;
        }
        if(target<0) return;
        if(target>0){
            curr.add(c[idx]);
            check(idx,target-c[idx],ans,curr,c);
            curr.remove(curr.size()-1);
        }
        check(idx+1,target,ans,curr,c);
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans=new ArrayList<>();
        List<Integer> curr =new ArrayList<>();
        int idx=0;
        check(idx,target,ans,curr,candidates);
        return ans;
    }
}
